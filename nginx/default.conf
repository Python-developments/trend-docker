server {
    listen 80;
    # server_name green.staging.onesolutionc.com;

    client_max_body_size 4G;

    #access_log /webapps/hello_django/logs/nginx-access.log;
    #error_log /webapps/hello_django/logs/nginx-error.log;

    location /static/ {
       alias /workspace/trend-backend/staticfiles/;  # Matches STATIC_ROOT in Django settings
    }

    location /media/ {
        alias /workspace/trend-backend/media/;
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;


        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        proxy_set_header X-NginX-Proxy true;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://web:8000;
            break;
        }
    }

    # listen 443 ssl; # managed by Certbot
    # ssl_certificate /etc/letsencrypt/live/green.staging.onesolutionc.com/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/green.staging.onesolutionc.com/privkey.pem; # managed by Certbot
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
