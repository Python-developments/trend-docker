version: '3.8'

services:
  web:
    container_name: trend-backend
    image: "trend-backend/api"
    context: .
    build:
      dockerfile: Dockerfile
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./:/workspace/trend-backend/
      - ./staticfiles:/workspace/trend-backend/staticfiles
    ports:
      - "8000:8000"
    restart: on-failure
    depends_on:
      postgres-db:
        condition: service_healthy

  postgres-db:
    container_name: trend-backend-postgres-db-new
    image: postgis/postgis:14-3.4
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pg_isready", "-h", "localhost", "-p", "5432", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER" ]
      interval: 0.5s
      timeout: 5s
      retries: 20
      start_period: 10s

  redis:
    container_name: trend-backend-redis
    image: redis:7.2.4-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: on-failure

  celery:
    container_name: trend-backend-celery
    image: "trend-backend/web"
    build:
      dockerfile: Dockerfile
    volumes:
      - ./:/workspace/trend-backend/
    command: celery -A trend worker -l info --logfile=celery.log
    env_file:
      - .env
    restart: on-failure
    depends_on:
      redis:
        condition: service_started
      postgres-db:
        condition: service_healthy

  celery-beat:
    container_name: trend-backend-celery-beat
    build:
      dockerfile: Dockerfile
    command: celery -A trend beat -l info --logfile=celery_beat.log
    volumes:
      - ./:/workspace/trend-backend/
    env_file:
      - .env
    depends_on:
      - web
      - redis
    restart: on-failure

volumes:
  postgres-data:
  static-files:
